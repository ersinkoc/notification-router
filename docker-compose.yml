
services:
  app:
    image: node:18-alpine
    container_name: notification-router
    working_dir: /app
    command: sh -c "npm install && npm run dev"
    ports:
      - "3000:3000"
      - "9090:9090"
    environment:
      - NODE_ENV=development
      - DATABASE_TYPE=sqlite
      - DATABASE_URL=sqlite://./data/notifications.db
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-secret-key-here
      - API_KEY_SALT=your-salt-here
      - WEBHOOK_SECRET=your-webhook-secret
    depends_on:
      - redis
    volumes:
      - .:/app
      - /app/node_modules
    restart: unless-stopped
    networks:
      - notification-network

  db:
    image: postgres:15-alpine
    container_name: notification-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: notifications
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - notification-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: notification-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6380:6379"
    networks:
      - notification-network
    restart: unless-stopped

  # web:
  #   build:
  #     context: ./web
  #     dockerfile: Dockerfile
  #   container_name: notification-web
  #   ports:
  #     - "3001:3001"
  #   environment:
  #     - REACT_APP_API_URL=http://localhost:3000
  #   depends_on:
  #     - app
  #   networks:
  #     - notification-network
  #   restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  notification-network:
    driver: bridge